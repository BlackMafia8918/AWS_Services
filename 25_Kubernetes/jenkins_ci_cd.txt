Manage Jenkins → Manage Plugins and install:

Pipeline
Docker Pipeline
Kubernetes CLI
GitHub

Install Docker & Kubernetes in Jenkins Server

sudo apt install -y docker.io
sudo systemctl enable docker
sudo systemctl start docker
sudo usermod -aG docker jenkins

Install kubectl & Helm

sudo apt install -y apt-transport-https ca-certificates curl
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo tee /etc/apt/trusted.gpg.d/kubernetes.asc
echo "deb https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
sudo apt update
sudo apt install -y kubectl


curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

=> Create Jenkinsfile for CI/CD

Jenkinsfile

pipeline {
    agent any

    environment {
        DOCKER_HUB_USER = 'your-dockerhub-username'
        DOCKER_IMAGE = 'node-k8s-app'
        KUBERNETES_NAMESPACE = 'default'
        KUBERNETES_DEPLOYMENT = 'nodejs-app'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git 'https://github.com/your-username/your-repo.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t $DOCKER_HUB_USER/$DOCKER_IMAGE:latest ."
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    withDockerRegistry([credentialsId: 'docker-hub-credentials', url: 'https://index.docker.io/v1/']) {
                        sh "docker push $DOCKER_HUB_USER/$DOCKER_IMAGE:latest"
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh "helm upgrade --install $KUBERNETES_DEPLOYMENT helm/nodejs-app"
                }
            }
        }
    }
}

=> Configure Jenkins Pipeline

Open Jenkins → New Item → Pipeline
Go to Pipeline Definition → Select Pipeline Script from SCM
Choose Git and enter your repository URL
Click Save and Build Now

=> Configure Credentials in Jenkins

Add Docker Hub Credentials
Jenkins → Manage Jenkins → Credentials
Click Global credentials → Add Credentials
Username: your-dockerhub-username
Password: your-dockerhub-password
ID: docker-hub-credentials
